<!doctype html> 
<html lang="en"> 
<head> 
	<meta charset="UTF-8" />
	<title>Septikon</title>
    <script src="//cdn.jsdelivr.net/phaser/2.2.2/phaser.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.1.0.min.js"></script>
    
    <script src="js/wall_grid.js"></script>
    <script src="js/septikon.js"></script>
    <style type="text/css">
        body {
            margin: 0;
        }
    </style>
</head>
<body>
    

<script type="text/javascript">

var game = new Phaser.Game('100%', '100%', Phaser.AUTO, '', { preload: preload, create: create, update: update });

function preload() { 

	Septikon.preload(game);
    
}

var wasd;
var camControl;
var cursors;
var directions;

function create() {

    game.physics.startSystem(Phaser.Physics.Arcade);
	
	Septikon.create(game);
	
    cursors = game.input.keyboard.createCursorKeys();
	
	this.camControl = {
		zoomTeam1: game.input.keyboard.addKey(Phaser.Keyboard.NUMPAD_1),
		zoomTeam2: game.input.keyboard.addKey(Phaser.Keyboard.NUMPAD_3),
		zoomFullBoard: game.input.keyboard.addKey(Phaser.Keyboard.NUMPAD_5),
		zoomLogo: game.input.keyboard.addKey(Phaser.Keyboard.NUMPAD_8),
		zoomTeam1Gunners: game.input.keyboard.addKey(Phaser.Keyboard.NUMPAD_4),
		zoomTeam2Gunners: game.input.keyboard.addKey(Phaser.Keyboard.NUMPAD_6)
	}
    
}

function update() {

	if(this.camControl.zoomTeam1.isDown)
	{
		tweenTurn1 = game.add.tween(Septikon.group);
		tweenZoom1 = game.add.tween(Septikon.group.scale).to({x: 1.5,y: 1.5}, 1000, Phaser.Easing.Quadratic.InOut);
		tweenTurn1.to({x: Septikon.boardCenterX, y:-50, angle:-90}, 1000, Phaser.Easing.Quadratic.InOut);
		tweenTurn1.start();
		tweenZoom1.start();
	}
	
	if(this.camControl.zoomTeam2.isDown)
	{
		tweenTurn2 = game.add.tween(Septikon.group);
		tweenZoom2 = game.add.tween(Septikon.group.scale).to({x: 1.5,y: 1.5}, 1000, Phaser.Easing.Quadratic.InOut);
		tweenTurn2.to({x: Septikon.boardCenterX, y:-50, angle:90}, 1000, Phaser.Easing.Quadratic.InOut);
		tweenTurn2.start();
		tweenZoom2.start();
	}
	
	if(this.camControl.zoomTeam1Gunners.isDown)
	{
		tweenTurn1 = game.add.tween(Septikon.group);
		tweenZoom1 = game.add.tween(Septikon.group.scale).to({x: 1.1,y: 1.1}, 1000, Phaser.Easing.Quadratic.InOut);
		tweenTurn1.to({x: Septikon.boardCenterX-30, y:game.world.centerY, angle:0}, 1000, Phaser.Easing.Quadratic.InOut);
		tweenTurn1.start();
		tweenZoom1.start();
	}
	
	if(this.camControl.zoomTeam2Gunners.isDown)
	{
		tweenTurn1 = game.add.tween(Septikon.group);
		tweenZoom1 = game.add.tween(Septikon.group.scale).to({x: 1.1,y: 1.1}, 1000, Phaser.Easing.Quadratic.InOut);
		tweenTurn1.to({x: Septikon.boardCenterX+30, y:game.world.centerY, angle:0}, 1000, Phaser.Easing.Quadratic.InOut);
		tweenTurn1.start();
		tweenZoom1.start();
	}
	
	if(this.camControl.zoomFullBoard.isDown)
	{
		tweenTurn3 = game.add.tween(Septikon.group);
		tweenZoom3 = game.add.tween(Septikon.group.scale).to({x: 1,y: 1}, 1000, Phaser.Easing.Quadratic.InOut);
		tweenTurn3.to({x: Septikon.boardCenterX, y:game.world.centerY, angle:0}, 1000, Phaser.Easing.Quadratic.InOut);
		tweenTurn3.start();
		tweenZoom3.start();
	}

	if(this.camControl.zoomLogo.isDown)
	{
		tweenTurn3 = game.add.tween(Septikon.group);
		tweenZoom3 = game.add.tween(Septikon.group.scale).to({x: 1.75,y: 1.75}, 1000, Phaser.Easing.Quadratic.InOut);
		tweenTurn3.to({x: Septikon.boardCenterX, y:game.world.centerY, angle:-90}, 1000, Phaser.Easing.Quadratic.InOut);
		tweenTurn3.start();
		tweenZoom3.start();
	}

    	
    if (cursors.up.isDown)
    {
		if (cursors.up.shiftKey)
		{
			Septikon.group.scale.set(2);
		}
		else
		{
			Septikon.group.y += 4;
		}
    }
    else if (cursors.down.isDown)
    {
		if (cursors.down.shiftKey)
		{
			Septikon.group.scale.set(1);
		}
		else
		{
			Septikon.group.y -= 4;
		}
    }

    if (cursors.left.isDown)
    {
        if (cursors.left.shiftKey)
        {
            Septikon.group.rotation -= 0.05;
        }
        else
        {
            Septikon.group.x += 4;
        }
    }
    else if (cursors.right.isDown)
    {
        if (cursors.right.shiftKey)
        {
            Septikon.group.rotation += 0.05;
        }
        else
        {
            Septikon.group.x -= 4;
        }
    }
}

</script>

</body>
</html>
