<!doctype html> 
<html lang="en"> 
<head> 
	<meta charset="UTF-8" />
	<title>Septikon</title>
    <script src="//cdn.jsdelivr.net/phaser/2.2.2/phaser.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.1.0.min.js"></script>
    
    <script src="js/wall_grid.js"></script>
    <script src="js/septikon.js"></script>
    <style type="text/css">
        body {
            margin: 0;
        }
    </style>
</head>
<body>
    

<script type="text/javascript">

var game = new Phaser.Game(1000, 800, Phaser.AUTO, '', { preload: preload, create: create, update: update });

function preload() { 
    game.load.image('board', 'assets/medium_board.png');
    game.load.image('clone', 'assets/clone.png');
}

var clone;
var wasd;
var cursors;
var tileManager;

function create() {
    game.physics.startSystem(Phaser.Physics.Arcade);
    
    game.add.sprite(0, 0, 'board');
	
	  //TESTING
	var graphics = game.add.graphics(100, 100);
	graphics.beginFill(0xFF3300);
	graphics.drawRect(0, 0, 1000, 100);
	devPanel = this.game.add.sprite(0, 700, graphics.generateTexture());
	devPanel.inputEnabled = true;
    devPanel.events.onInputDown.add(rollDice);
	graphics.destroy();
    
  
    game.helpTitle = game.add.text(50, 5, '', { fill: '#ffffff' });
    game.helpInfo = game.add.text(50, 670, '', { fill: '#dddddd' });
	game.dice = game.add.text(50, 750, 'Click to Roll', { fill: '#dddddd' });

    tileManager = Septikon.createTiles(game);
        
    //END TESTING
    
    clone = game.add.sprite(Septikon.xCoordsToPixel(0), Septikon.yCoordsToPixel(0), 'clone');
    clone.xCoord = 0;
    clone.yCoord = 0;
    clone.anchor.set(0.5);
    game.physics.arcade.enable(clone);
    clone.scale.setTo(0.25);
    clone.angle = 90;   

    this.cursors = game.input.keyboard.createCursorKeys();

    this.wasd = {
        up: game.input.keyboard.addKey(Phaser.Keyboard.W),
        down: game.input.keyboard.addKey(Phaser.Keyboard.S),
        left: game.input.keyboard.addKey(Phaser.Keyboard.A),
        right: game.input.keyboard.addKey(Phaser.Keyboard.D),
    };
    
}

var movementRate = 150;
var previousX;
var isMovingX = false;
var targetX;
var previousY;
var isMovingY = false;
var targetY;

function update() {
    
    clone.body.velocity.x = 0;
    clone.body.velocity.y = 0;
    
    if (this.wasd.left.isDown && !this.isMovingX)
    {
        if(Septikon.checkWall("West", clone.xCoord, clone.yCoord)) {
            this.isMovingX = true;
            this.previousX = clone.body.x;
            this.targetX = this.previousX-29;
            clone.xCoord--;
        }
    }
    else if (this.wasd.right.isDown && !this.isMovingX)
    {
        if(Septikon.checkWall("East", clone.xCoord, clone.yCoord)) {
            this.isMovingX = true;
            this.previousX = clone.body.x;
            this.targetX = this.previousX+29;
            clone.xCoord++;
        }
    }
    
    if (this.wasd.up.isDown && !this.isMovingY)
    {
        if(Septikon.checkWall("North", clone.xCoord, clone.yCoord)) {
            this.isMovingY = true;
            this.previousY = clone.body.y;
            this.targetY = this.previousY-29;
            clone.yCoord--;
        }
    }
    else if (this.wasd.down.isDown && !this.isMovingY)
    {
        if(Septikon.checkWall("South", clone.xCoord, clone.yCoord)) {
            this.isMovingY = true;
            this.previousY = clone.body.y;
            this.targetY = this.previousY+29;
            clone.yCoord++;
        }
    }
    
    if(this.isMovingX) {
        //LEFT of target?
        if (this.previousX > this.targetX && clone.body.x <= this.targetX) {
            this.isMovingX = false;
        }
        else if (this.previousX < this.targetX && clone.body.x >= this.targetX) {
            this.isMovingX = false;
        }
        else if (this.previousX > this.targetX) {
            clone.body.velocity.x = -200;
        }
        else if (this.previousX < this.targetX) {
            clone.body.velocity.x = 200;
        }
    }
    if(this.isMovingY) {
        //LEFT of target?
        if (this.previousY > this.targetY && clone.body.y <= this.targetY) {
            this.isMovingY = false;
        }
        else if (this.previousY < this.targetY && clone.body.y >= this.targetY) {
            this.isMovingY = false;
        }
        else if (this.previousY > this.targetY) {
            clone.body.velocity.y = -200;
        }
        else if (this.previousY < this.targetY) {
            clone.body.velocity.y = 200;
        }
    }
    
}

function rollDice(){
	roll = Math.floor(Math.random() * 6) + 1;
	console.log(roll);
	game.dice.text = "You rolled a " + (roll);
	return ;  
}

</script>

</body>
</html>
